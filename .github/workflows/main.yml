name: Ultimate RDP Setup
on:
  workflow_dispatch:
jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 3600
    steps:
    - name: Configure Core RDP and Performance
      run: |
        # Enable RDP
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
        # Disable NLA for simplicity
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "SecurityLayer" -Value 0 -Force
        # Improve RDP performance
        Set-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Terminal Server Client' -Name "Compression" -Value 1 -Force
        # Firewall rule
        netsh advfirewall firewall delete rule name="RDP-Tailscale"
        netsh advfirewall firewall add rule name="RDP-Tailscale" dir=in action=allow protocol=TCP localport=3389
        Restart-Service -Name TermService -Force
        # Increase PageFile
        $pageFileSizeMB = 8192
        wmic computersystem where name="%computername%" set AutomaticManagedPagefile=False
        wmic pagefileset where name="C:\\pagefile.sys" set InitialSize=$pageFileSizeMB,MaximumSize=$pageFileSizeMB
        Write-Host "PageFile set to $pageFileSizeMB MB"
        # Expand virtual disk to 40GB
        $vhdPath = "C:\Users\runneradmin\VirtualDisk.vhdx"
        New-VHD -Path $vhdPath -SizeBytes 40GB -Dynamic
        Mount-VHD -Path $vhdPath
        Initialize-Disk -Number (Get-Disk | Where PartitionStyle -Eq 'RAW').Number -PartitionStyle GPT -PassThru | New-Partition -UseMaximumSize -AssignDriveLetter | Format-Volume -FileSystem NTFS -Force

    - name: Create RDP User
      run: |
        $username = "ADMINSUPER"
        $password = "UltraRdp@2025!"
        $securePass = ConvertTo-SecureString $password -AsPlainText -Force
        if (-not (Get-LocalUser -Name $username -ErrorAction SilentlyContinue)) { New-LocalUser -Name $username -Password $securePass -AccountNeverExpires }
        Add-LocalGroupMember -Group "Administrators" -Member $username
        Add-LocalGroupMember -Group "Remote Desktop Users" -Member $username
        echo "RDP_CREDS=User: $username | Password: $password" >> $env:GITHUB_ENV
        if (-not (Get-LocalUser -Name $username)) { Write-Error "User creation failed"; exit 1 }

    - name: Install Tailscale
      run: |
        $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
        $installerPath = "$env:TEMP\tailscale.msi"
        Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
        Start-Process msiexec.exe -ArgumentList "/i", "`"$installerPath`"", "/quiet", "/norestart" -Wait
        Remove-Item $installerPath -Force

    - name: Install Developer Tools
      run: |
        winget install --id Git.Git -e --source winget
        winget install --id Microsoft.VisualStudioCode -e --source winget
        winget install --id Python.Python.3.12 -e --source winget
        winget install --id OpenJS.NodeJS.LTS -e --source winget
        winget install --id Microsoft.DotNet.SDK.8 -e --source winget

    - name: Establish Tailscale Connection
      run: |
        & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-runner-$env:GITHUB_RUN_ID
        $tsIP = $null
        $retries = 0
        while (-not $tsIP -and $retries -lt 10) { $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4; Start-Sleep -Seconds 5; $retries++ }
        if (-not $tsIP) { Write-Error "Tailscale IP not assigned. Exiting."; exit 1 }
        echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV

    - name: Verify RDP
      run: |
        Write-Host "Tailscale IP: $env:TAILSCALE_IP"
        $testResult = Test-NetConnection -ComputerName $env:TAILSCALE_IP -Port 3389
        if (-not $testResult.TcpTestSucceeded) { Write-Error "TCP connection to RDP port 3389 failed"; exit 1 }
        Write-Host "TCP connectivity successful!"

    - name: Maintain Connection
      run: |
        Write-Host "`n=== RDP ACCESS ==="
        Write-Host "Address: $env:TAILSCALE_IP"
        Write-Host "Username: ADMINSUPER"
        Write-Host "Password: UltraRdp@2025!"
        Write-Host "==================`n"
        while ($true) { Write-Host "[$(Get-Date)] RDP Active - Use Ctrl+C in workflow to terminate"; Start-Sleep -Seconds 300 }
